{"version":3,"sources":["../src/index.ts","../src/container.ts","../src/repositories/user-repository.ts","../src/shared/utils.ts"],"sourcesContent":["import { container } from \"./container\";\nimport { UserRepository } from \"./repositories/iuser-repository\";\n\nexport const Service = {\n  userRepository: container.resolve<UserRepository>(\"UserRepository\"),\n};\n\nexport type { User } from \"./shared/dtos\";\n\nexport { helloWorld } from \"./shared/utils\";\n","import \"reflect-metadata\";\nimport { container, Lifecycle } from \"tsyringe\";\nimport { prisma } from \"@my-company/database\";\nimport { PrismaUserRepository } from \"./repositories/user-repository\";\n\ncontainer.register(\"PrismaClient\", {\n  useValue: prisma,\n});\n\ncontainer.register(\"UserRepository\", { useClass: PrismaUserRepository }, { lifecycle: Lifecycle.Singleton });\n\nexport { container };\n","import { autoInjectable, inject } from \"tsyringe\";\nimport type { PrismaClient } from \"@my-company/database\";\nimport type { UserRepository } from \"./iuser-repository\";\nimport type { User } from \"../shared/dtos\";\n\n@autoInjectable()\nexport class PrismaUserRepository implements UserRepository {\n  constructor(@inject(\"PrismaClient\") private readonly prisma: PrismaClient) {}\n  async getUsers(): Promise<User[]> {\n    return this.prisma.user.findMany();\n  }\n}\n","export function helloWorld(name?: string) {\n  return `Server Hello World to ${name}`;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,8BAAO;AACP,IAAAA,mBAAqC;AACrC,sBAAuB;;;ACFvB,sBAAuC;AAMhC,IAAM,uBAAN,MAAqD;AAAA,EAC1D,YAAqDC,SAAsB;AAAtB,kBAAAA;AAAA,EAAuB;AAAA,EAC5E,MAAM,WAA4B;AAChC,WAAO,KAAK,OAAO,KAAK,SAAS;AAAA,EACnC;AACF;AALa,uBAAN;AAAA,MADN,gCAAe;AAAA,EAEF,uBAAC,wBAAO,cAAc;AAAA,GADvB;;;ADDb,2BAAU,SAAS,gBAAgB;AAAA,EACjC,UAAU;AACZ,CAAC;AAED,2BAAU,SAAS,kBAAkB,EAAE,UAAU,qBAAqB,GAAG,EAAE,WAAW,2BAAU,UAAU,CAAC;;;AETpG,SAAS,WAAW,MAAe;AACxC,SAAO,yBAAyB;AAClC;;;AHCO,IAAM,UAAU;AAAA,EACrB,gBAAgB,2BAAU,QAAwB,gBAAgB;AACpE;","names":["import_tsyringe","prisma"]}